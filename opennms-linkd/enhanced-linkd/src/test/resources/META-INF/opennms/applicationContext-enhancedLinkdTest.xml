<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	">

    <context:annotation-config />
    <tx:annotation-driven/>
    <aop:aspectj-autoproxy proxy-target-class="true" />
    
  <bean id="dataSource" class="org.opennms.core.db.DataSourceFactoryBean" />
    
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <list>
        <value>org.opennms.netmgt.dao.hibernate</value>
        <value>org.opennms.netmgt.model</value>
        <value>org.opennms.netmgt.dao.topology</value>
        <value>org.opennms.netmgt.model.topology</value>
      </list>
    </property>
    <!--  property name="schemaUpdate" value="true">
      </property -->
    <property name="annotatedPackages">
      <list>
        <value>org.opennms.netmgt.dao.hibernate</value>
        <value>org.opennms.netmgt.model</value>
        <value>org.opennms.netmgt.dao.topology</value>
        <value>org.opennms.netmgt.model.topology</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <value>
        hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
        hibernate.cache.use_second_level_cache=false
        hibernate.cache=false
        hibernate.cache.use_query_cache=false
        hibernate.jdbc.batch_size=0
        <!-- hibernate.format_sql=true -->
      </value>
    </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="nestedTransactionAllowed" value="true"/>
  </bean>
  
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager" />
  </bean>

  <bean id="nodeDao" class="org.opennms.netmgt.dao.hibernate.NodeDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
  
  <!-- 
    <bean id="topologyDao" class="org.opennms.netmgt.dao.topology.TopologyDaoHibernate">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>
   -->
  
  <bean id="topologyDao" class="org.opennms.netmgt.dao.topology.TopologyDaoInMemoryImpl" />
  
    <bean id="queryManager" class="org.opennms.netmgt.enlinkd.EnhancedLinkdServiceImpl">
      <property name="nodeDao" ref="nodeDao" />
      <property name="topologyDao" ref="topologyDao" />
    </bean>

    <bean id="scheduler" class="org.opennms.netmgt.linkd.scheduler.Scheduler">
      <constructor-arg value="EnhancedLinkd" />
      <constructor-arg>
        <util:property-path path="enlinkdConfig.threads" />
      </constructor-arg>
    </bean>

    <bean id="receiver" class="org.opennms.netmgt.enlinkd.EventProcessor">
      <property name="linkd" ref="daemon"/>
    </bean>

    <bean id="daemonListener" class="org.opennms.netmgt.model.events.AnnotationBasedEventListenerAdapter">
      <property name="annotatedListener" ref="receiver" />
      <property name="eventSubscriptionService" ref="eventSubscriptionService" />
    </bean>

    <bean name="daemon" class="org.opennms.netmgt.enlinkd.EnhancedLinkd">
      <property name="eventForwarder" ref="eventForwarder" />
    </bean>

   <bean id="enlinkdConfig-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <property name="staticMethod"><value>org.opennms.netmgt.config.EnhancedLinkdConfigFactory.init</value></property>
    </bean>
 
    <bean id="enlinkdConfig" class="org.opennms.netmgt.config.EnhancedLinkdConfigFactory" depends-on="enlinkdConfig-init" factory-method="getInstance"/>
</beans>
