<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:component-scan base-package="org.opennms.acl" />
	<context:property-placeholder location="/config.properties" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="org.opennms.acl.ui.messages.ui" />


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:url="${jdbc.url}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" p:driverClassName="${jdbc.driver}"
		p:maxIdle="3" p:maxWait="50" p:removeAbandoned="true"
		p:removeAbandonedTimeout="550" p:logAbandoned="true" p:maxActive="20" />


    <!-- Hibernate -->

	<context:component-scan base-package="org.opennms.netmgt.dao.hibernate">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>

	<context:component-scan base-package="org.opennms.acl.service">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean name="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>


    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
        p:dataSource-ref="dataSource" >
       <property name="annotatedClasses">
            <list>
            	<value>org.opennms.netmgt.model.OnmsUser</value>
        		<value>org.opennms.netmgt.model.OnmsAuthority</value>
                <value>org.opennms.netmgt.model.OnmsGroupMembers</value>
        		<value>org.opennms.netmgt.model.OnmsGroup</value>
        		<value>org.opennms.netmgt.model.OnmsAuthoritiesCategories</value>
        		<value>org.opennms.netmgt.model.OnmsCategory</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.jdbc.batch_size=${hibernate.jdbc.batch_size}
                hibernate.c3p0.max_size=${hibernate.c3p0.max_size}
                hibernate.c3p0.min_size=${hibernate.c3p0.min_size}
                hibernate.c3p0.timeout=${hibernate.c3p0.timeout}
                hibernate.c3p0.max_statements=${hibernate.c3p0.max_statements}
                hibernate.c3p0.idle_test_period=${hibernate.c3p0.idle_test_period}
                hibernate.c3p0.acquire_increment=${hibernate.c3p0.acquire_increment}
                hibernate.c3p0.validate=${hibernate.c3p0.validate}
                hibernate.cache.provider_class=${hibernate.cache.provider_class}
                hibernate.connection.provider_class=${hibernate.connection.provider_class}
                hibernate.show_sql=${hibernate.show_sql}
                hibernate.hbm2ddl.auto=update
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.use_query_cache=true
            </value>
        </property>
    </bean>


	<!--  S E C U R I T Y -->
	<sec:http>
		<sec:intercept-url pattern="/log*.jsp" filters="none" />
		<sec:intercept-url pattern="/*.page" access="ROLE_ADMIN" />
		<sec:form-login login-page="/login.jsp"
			default-target-url="/" login-processing-url="/j_security_check"
			authentication-failure-url="/loginError.jsp" />
		<sec:logout logout-url="/logout.jsp" invalidate-session="true"
			logout-success-url="/login.jsp" />
	</sec:http>

	<sec:authentication-provider user-service-ref="userDetailsService">
		<sec:password-encoder hash="sha" />
	</sec:authentication-provider>

	<bean id="accessManager" class="org.springframework.security.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter" />
				<bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	<bean id="userDetailsService"
		class="org.opennms.acl.repository.jdbc.AuthenticationJdbcDaoImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="usersByUsernameQuery"
			value="SELECT username, password, enabled FROM authentication WHERE username = ?" />
		<property name="authoritiesByUsernameQuery"
			value="SELECT username, authority FROM authorities WHERE username = ?" />
	</bean>

    <bean id="upperCaseMd5PasswordEncoder" class="org.opennms.web.springframework.security.UpperCaseMd5PasswordEncoder"/>

</beans>